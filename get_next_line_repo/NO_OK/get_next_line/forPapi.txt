Tengo un problema con el código en este momento, puedes echarme un cable?
Te adjunto el output de francinette:
c3r10s5% paco
╔══════════════════════════════════════════════════════════════════════════════╗
║                Welcome to Francinette, a 42 tester framework!                ║
╚═══════════════════════╦══════════════════════════════╦═══════════════════════╝
                        ║         get_next_line        ║
                        ╚══════════════════════════════╝
✔ Preparing framework
✖ Executing: norminette
get_next_line_utils.c: OK!
get_next_line.c: Error!
Error: EMPTY_LINE_FUNCTION  (line: 106, col:   1):	Empty line in function
get_next_line.h: OK!

ℹ Running tests: gnlTester (https://github.com/Tripouille/gnlTester)
[Mandatory]
../get_next_line.c: In function ‘get_next_line’:
../get_next_line.c:93:9: error: variable ‘rest’ set but not used [-Werror=unused-but-set-variable]
   93 |  char  *rest;
      |         ^~~~
cc1: all warnings being treated as errors
make: *** [Makefile:41: 1mandatory] Error 1

Problem compiling tests.
ℹ Running tests: fsoares (my own tests)
BUFFER_SIZE: 1
Invalid fd          : 1.OK 2.KO Segfault
Segmentation fault (core dumped)
make: [Makefile:23: mandatory] Error 139 (ignored)
BUFFER_SIZE: 10
Invalid fd          : 1.OK 2.KO Segfault
Segmentation fault (core dumped)
make: [Makefile:24: mandatory] Error 139 (ignored)
BUFFER_SIZE: 1000000
Invalid fd          : 1.OK 2.KO Segfault
Segmentation fault (core dumped)
make: [Makefile:25: mandatory] Error 139 (ignored)
Errors found:

To see the tests open: /home/masenjo/francinette/tests/get_next_line/fsoares/tester.c


Summary: no bonus

Norminette Errors: get_next_line.c

Failed tests: gnlTester, fsoares
c3r10s5% cc -o test_file1 get_next_line.c get_next_line_utils.c -Wall -Wextra -Werror
/usr/bin/ld: /usr/bin/../lib/gcc/x86_64-linux-gnu/12/../../../x86_64-linux-gnu/crt1.o: in function `_start':
(.text+0x1b): undefined reference to `main'
clang: error: linker command failed with exit code 1 (use -v to see invocation)
c3r10s5% 
Como puedes ver compila sin problema y a continuación te adjunto el código que llevo de momento, gracias por la ayuda!

get_next_line.h:
#ifndef GET_NEXT_LINE_H
# define GET_NEXT_LINE_H
# ifndef BUFFER_SIZE
#  define BUFFER_SIZE 42
# endif

# include <unistd.h>
# include <stdio.h>
# include <stdlib.h>
# include <fcntl.h>

char	*get_next_line(int fd);
int		ft_strlen(const char *str);
void	*ft_memcpy(void *dest, const void *src, size_t n);
char	*ft_strjoin(char const *s1, char const *s2);
char	*ft_strdup(const char *str);

#endif

get_next_line_utils.c:
#include "get_next_line.h"

int	ft_strlen(const char *str)
{
	int	i;

	i = 0;
	while (str[i])
		i++;
	return (i);
}

void	*ft_memcpy(void *dest, const void *src, size_t n)
{
	size_t				i;
	unsigned char		*p_dest;
	const unsigned char	*p_src;

	if (!src && !dest)
		return (NULL);
	i = 0;
	p_dest = (unsigned char *)dest;
	p_src = (const unsigned char *)src;
	while (i < n)
	{
		p_dest[i] = p_src[i];
		i++;
	}
	return (dest);
}

char	*ft_strdup(const char *str)
{
	size_t	l;
	char	*new;

	l = ft_strlen(str);
	new = (char *) malloc(sizeof(char) * (l + 1));
	if (!new)
		return (0);
	ft_memcpy(new, str, l);
	new[l] = '\0';
	return (new);
}

static char	*ft_strcat(char *dest, const char *src)
{
	int	c_d;
	int	c_s;

	c_d = 0;
	c_s = 0;
	while (dest[c_d] != '\0')
	{
		c_d++;
	}
	while (src[c_s] != '\0')
	{
		dest[c_d] = src[c_s];
		c_s++;
		c_d++;
	}
	dest[c_d] = '\0';
	return (dest);
}

char	*ft_strjoin(char const *s1, char const *s2)
{
	char	*str;
	size_t	size;
	int		i;

	i = -1;
	if (!s1 || !s2)
		return (0);
	size = ft_strlen(s1) + ft_strlen(s2);
	str = (char *)malloc(sizeof(char) * (size + 1));
	if (!str)
		return (0);
	while (s1[++i])
		str[i] = s1[i];
	str[i] = '\0';
	str = ft_strcat(str, s2);
	return (str);
}

get_next_line.c:
#include "get_next_line.h"

static int	ft_index_of(char *str, char c)
{
	int	i;

	i = 0;
	while (str[i])
	{
		if (str[i] == c)
			return (i);
	}
	return (-1);
}

static char	*ft_strchr(char *s, char c)
{
	size_t	i;

	i = 0;
	while (s[i])
	{
		if (s[i] == c)
			return (&s[i]);
		i++;
	}
	if (c == '\0')
		return (&s[i]);
	return (0);
}

static void	aux_get_line(char *buff, char *temp_buff,
	int fd, ssize_t read_bytes)
{
	while (!ft_strchr(buff, '\n'))
	{
		temp_buff = (char *) malloc(sizeof(char) * BUFFER_SIZE + 1);
		read_bytes = read(fd, temp_buff, BUFFER_SIZE);
		if (read_bytes < 0)
		{
			free(temp_buff);
			break ;
		}
		if (!read_bytes)
		{
			free(temp_buff);
			break ;
		}
		temp_buff[read_bytes] = '\0';
		buff = ft_strjoin(buff, temp_buff);
		free(temp_buff);
	}
}

static char	*ft_substr(char const *s, int start, int len)
{
	char	*str;
	int		s_len;

	if (!s)
		return (NULL);
	s_len = ft_strlen(s);
	if (start >= s_len)
		return (ft_strdup(""));
	if (len > s_len - start)
		len = s_len - start;
	str = (char *)malloc(sizeof(char) * (len + 1));
	if (!str)
		return (NULL);
	ft_memcpy(str, s + start, len);
	str[len] = '\0';
	return (str);
}

char	*get_next_line(int fd)
{
	static char	*buff;
	ssize_t		read_bytes;
	char		*temp_buff;
	char		*line;
	char		*rest;

	if (fd < 0 || BUFFER_SIZE <= 0)
		return (NULL);
	temp_buff = NULL;
	read_bytes = 0;
	aux_get_line(buff, temp_buff, fd, read_bytes);
	if (!buff)
		return (NULL);
	line = ft_substr(buff, 0, ft_index_of(buff, '\n'));
	rest = ft_substr(buff, ft_index_of(buff, '\n') + 1, ft_strlen(buff));
	free(buff);
	buff = ft_strjoin(buff, temp_buff);

	return (line);
}

/*int	main(void)
{
	int		fd1;
	char	*line;

	fd1 = open("file1.txt", O_RDONLY);
	if (fd1 == -1)
		return (printf("Error opening file."), 1);
	while ((line = get_next_line(fd1)) != NULL)
	{
		printf("In FD1: %s", line);
		free(line);
	}
	close(fd1);
	return (0);
}*/
En este fichero hay un main() comentado, puesto que también daba segfault, ahí he decidido lanzar francinette.
file1.txt:
Do you see any Teletubbies in here?
Do you see a slender plastic tag clipped to my shirt with my name printed on it?
Do you see a little Asian child with a blank expression on his face sitting
outside on a mechanical helicopter that shakes when you put quarters in it?
No? Well, that's what you see at a toy store. And you must think you're in
a toy store, because you're here shopping for an infant named Jeb.

De veras que pienso que es super largo, no se si pudiera hacerlo más breve, pero no encuentro el fallo crack.